## General
# Define default shell
#set-option -g default-command "reattach-to-user-namespace -l /opt/local/bin/bash"

# detach 
bind-key d detach

# Inherit environment from parent - needed for ssh key agent
set-option -g update-environment -r

# Terminal variable
TERM=screen-256color
#set-option -g default-terminal "xterm-256color"
# Better compatibility but less colors
#set-option -g default-terminal "screen"
set-option -g default-terminal $TERM

# Terminal friendly scrolling
set-option -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Use shift-PgUp / PgDown to scroll back buffer
# Although xterm scrolling is set this is required for multi-pane window scrolling
# Default, no need to add
#bind-key PPage

# Start window indexing at one instead of zero
set-option -g base-index 1
# Start pane numbering at one
set-window-option -g pane-base-index 1

# Keep tmux msgs around longer - msec
set-option -g display-time 2000

# History
set-option -g history-limit 5000

# Only consider visible terminals when determining resize limits
set-window-option -g aggressive-resize on

# Expect UTF-8 sequences to appear in this window
set-window-option -g utf8 on

# Treat top-bit-set-option characters in the status-left and status-right strings as UTF-8
set-option -g status-utf8 on



## Key bindings
# unbind-key Mac Terminal incompatible keys
unbind-key M-1
unbind-key M-2
unbind-key M-3
unbind-key M-4
unbind-key M-5
unbind-key M-n
unbind-key M-o
unbind-key M-p
unbind-key M-Up
unbind-key M-Down
unbind-key M-Left
unbind-key M-Right
unbind-key C-Up
unbind-key C-Down
unbind-key C-Left
unbind-key C-Right


# Key repeat timeout to 1 second
set-option -g repeat-time 1000

# Default key to ctrl-a like screen
set-option -g prefix C-w
unbind-key C-b

# Allow CTRL-a to send CTRL-a to session
bind-key C-\ send-prefix

#set-option -g prefix C-b
#bind-key C-w send-prefix

# Reload tmux configuration
bind-key R source-file ~/.tmux.conf \; display-message "Config reloaded..."

# cssh style multi-pane keyboard commands
unbind-key s
bind-key s set-window-option synchronize-panes

## Killing things
# Window - only useful with multiple panes
bind-key BSpace confirm-before -p "Kill window #W? (y/n)" kill-window
# Pane - Also closes single pane windows
bind-key x confirm-before -p "Kill pane #P? (y/n)" kill-pane
# Session

## Sessions
unbind-key (
unbind-key )
unbind-key {
unbind-key }
bind-key { switch-client -p
bind-key } switch-client -n


## Windows
# Select windows repeatedly
unbind-key n
bind-key -r Tab next-window
bind-key -r BTab previous-window

# set-option 0 to Window 10 instead of (non-existant) 0
unbind-key 0
bind-key 0 select-window -t :10

# Move window
unbind-key .
bind-key M command-prompt -p "Move window to:" "move-window -t '%%'"
bind-key m command-prompt -p "Swap window with:" "swap-window -t '%%'"


## Panes
# Create panes
unbind-key '"'
unbind-key %
bind-key - split-window -v
bind-key \ split-window -h

#  Pane sizing
#unbind-key j
#unbind-key l
#unbind-key i
#unbind-key k
#bind-key j resize-pane -L 15
#bind-key l resize-pane -R 15
#bind-key i resize-pane -U 15
#bind-key k resize-pane -D 15
bind-key -n C-S-Left resize-pane -L 10
bind-key -n C-S-Right resize-pane -R 10
bind-key -n C-S-Up resize-pane -U 10
bind-key -n C-S-Down resize-pane -D 10

# Swap panes
unbind-key [
unbind-key ]
bind-key [ swap-pane -D
bind-key ] swap-pane -U

# Break pane
unbind-key '!'
bind-key b break-pane

# Join pane
bind-key B command-prompt -p "Join current window to:" "join-pane -t '%%'"


## Macros
# Pipe the current pane to a log file
bind-key G pipe-pane -o "cat >>$HOME/#W-tmux.log" \; display-message "Output toggled to log $HOME/#W-tmux.log"

# Toggle zoom pane to full window
bind-key z run "if [[ $(tmux list-window) =~ tmux-zoom ]]; then tmux last-window; tmux swap-pane -s tmux-zoom.0; tmux kill-window -t tmux-zoom; else tmux new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read'; tmux swap-pane -s tmux-zoom.0; tmux select-window -t tmux-zoom;fi"

## Vim window
bind-key v run "if [[ $(tmux list-window) =~ VIM ]]; then tmux select-window -t VIM; else tmux new-window -n VIM 'vim'; tmux swap-window -t 1; fi"


## vi
# vi keys for status
set-option -g status-keys vi
# vi keys for mode
set-window-option -g mode-keys vi
# Minimize delay after commands to avoid issues with vi
set-option -sg escape-time 1

# vi copy mode
bind-key Escape copy-mode
# vi visual marking
bind-key -t vi-copy 'v' begin-selection
# vi copy
bind-key -t vi-copy 'y' copy-selection

# vi paste
unbind-key p
bind-key p paste-buffer

## Mark windows for notification
bind-key o command-prompt -p "Monitor window for: " "monitor-content '%%'"
bind-key O command-prompt -p "Alert when window silent for # of seconds: " "monitor-silence '%%'"

## Mouse
# Doesn't work with Mac Terminal
# set-option -g mode-mouse on
# set-option -g mouse-select-pane on
# set-option -g mouse-select-window on
# set-option -g mouse-resize-pane on



## Statusbar
# Statusbar properties
set-option -g status-bg colour232
set-option -g status-fg colour248
set-option -g status-interval 1

# Statusbar layout
# While if-shell is a wonderful option it is not guaranteed to run before the first session is spawned.
# Consequently it is no suitable for any settings you want to apply to the first session.
# The status bar is updated automatically so if-shell works OK in this case.
#if-shell 'test ${HOSTNAME:0:7} = "baleroc"' 'set-option -g status-right "| #(mydate) "' 'set-option -g status-right "| #(~/bin/battery Discharging; ~/bin/battery Charging) | #(mydate) "'
set-option -g status-right "#[fg=colour238]| %H:%M %a %d %b %Z "
set-option -g status-left "#[fg=green]#[attr=bright]#h#[fg=colour238]#[attr=normal] | #[fg=colour238]#[fg=colour238]"
set-option -g status-left-length 24
set-option -g status-justify centre

# Highlighting the active window in status bar
set-option -g pane-border-fg white
set-option -g pane-border-bg default
set-option -g pane-active-border-fg blue
set-option -g pane-active-border-bg default


## Notifying if windows has activity
# Bell only in current window
set-option -g bell-action current
# Monitor windows for activity
set-window-option -g monitor-activity on
# No messages on activity
set-window-option -g visual-activity off
# Messages for marked windows
set-window-option -g visual-content on

TMUX_COLOUR_BORDER="colour237"
TMUX_COLOUR_ACTIVE="colour231"
TMUX_COLOUR_INACTIVE="colour16"

## Window status
# Window status format
# set-window-option -g window-status-current-format "▏#I.#P:#W▕"
#set-window-option -g window-status-current-format "▕#[underscore] #I.#P:#W #[nounderscore]▏"
set-window-option -g window-status-current-format "#[fg=$TMUX_COLOUR_ACTIVE]#I:#W#F"
set-window-option -g window-status-format "#[fg=$TMUX_COLOUR_INACTIVE]#I:#W#F"

## Window Status colors
#Valid attributes: none, bold, dim, underscore, blink, reverse, hidden, italics

set-window-option -g window-status-bell-attr none
set-window-option -g window-status-bell-bg colour232
set-window-option -g window-status-bell-fg green

set-window-option -g window-status-content-attr none
set-window-option -g window-status-content-bg colour232
set-window-option -g window-status-content-fg brightred

set-window-option -g window-status-activity-attr none
set-window-option -g window-status-activity-bg $TMUX_COLOUR_BORDER
set-window-option -g window-status-activity-fg $TMUX_COLOUR_ACTIVE

set-window-option -g window-status-attr none
set-window-option -g window-status-bg colour232
set-window-option -g window-status-fg white

set-window-option -g window-status-current-attr bright
set-window-option -g window-status-current-bg red
set-window-option -g window-status-current-fg colour255

# Message colors
set-option -g message-attr none
set-option -g message-bg colour235
set-option -g message-fg cyan


# Auto rename to currently running program
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T'
set-window-option -g automatic-rename on



# Host-specific configuration
source-file ~/.tmux/extra.conf


